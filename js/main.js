// Generated by CoffeeScript 1.10.0
(function() {
  var INDICES, QRCODE_SIZE, compile, den, dump, exec, limit, num, power_of_2, step, val;

  INDICES = {
    "frakemonGo974": "http://zotweb.re/irem/frakemonGo974/",
    1: "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3021.9783921877683!2d-73.97635568459349!3d40.762499979326506!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x8e9cfc7444d8f876!2sTrump+Tower!5e0!3m2!1sfr!2sus!4v1489314254841"
  };

  QRCODE_SIZE = 128;

  power_of_2 = function(n) {
    if (isNaN(n)) {
      return 'Not a number';
    }
    return n && (n & n - 1) === 0;
  };

  num = new Array;

  den = new Array;

  val = void 0;

  limit = 1000;

  compile = function(prog) {
    var regex;
    regex = /\s*(\d*)\s*\/\s*(\d*)\s*(.*)/m;
    while (regex.test(prog)) {
      num.push(regex.exec(prog)[1]);
      den.push(regex.exec(prog)[2]);
      prog = regex.exec(prog)[3];
    }
  };

  dump = function(prog) {
    var i;
    i = 0;
    while (i < num.length) {
      document.body.innerHTML += num[i] + '/' + den[i] + ' ';
      i++;
    }
    document.body.innerHTML += '<br>';
  };

  step = function(val) {
    var i;
    i = 0;
    while (i < den.length && val % den[i] !== 0) {
      i++;
    }
    return num[i] * val / den[i];
  };

  exec = function(val) {
    var i, r;
    i = 0;
    while (val && i < limit) {
      document.body.innerHTML += i + ': ' + val + '<br>';
      r = val;
      val = step(val);
      i++;
    }
    return r;
  };

  $(function() {
    var isInt;
    $("button").button();
    $("#qrcode-frakemonGo974").qrcode({
      width: QRCODE_SIZE,
      height: QRCODE_SIZE,
      text: INDICES.frakemonGo974
    });
    $("body").on("click", ".close", function() {
      return $(".info").hide();
    });
    $(".info").hide();
    $("body").on("click", "#FrakDocLink", function() {
      return $("#FrakDoc").show();
    });
    $("body").on("click", "#FrakCalcLink", function() {
      return $("#FrakCalc").show();
    });
    isInt = function(value) {
      return (!isNaN(value)) && (parseInt(Number(value)) === value) && (!isNaN(parseInt(value, 10)));
    };
    $("body").on("click", "#FrakCalc-button1", function() {
      var a, b, c;
      a = parseInt($("#calc-input1").val());
      b = parseInt($("#calc-input2").val());
      c = parseInt($("#calc-input3").val());
      if (isInt(a * b * c)) {
        return alert(a * b / c);
      } else {
        return alert("Les nombres ne sont pas des entiers");
      }
    });
    $("body").on("click", "#FrakCalc-button2", function() {
      var a, b, c, d;
      a = parseInt($("#calc-input4").val());
      b = parseInt($("#calc-input5").val());
      c = parseInt($("#calc-input6").val());
      d = parseInt($("#calc-input7").val());
      if (isInt(a * b * c * d)) {
        return alert(a / b * c / d);
      } else {
        return alert("Les nombres ne sont pas des entiers");
      }
    });
    $("body").on("click", "#reponse1", function() {
      var x;
      x = prompt("Entrer votre réponse (un nombre)", "");
      if ((x !== null) && (parseInt(x) === 4)) {
        $("#gmaps").attr("src", INDICES[1]);
        $("#qrcode").qrcode({
          width: QRCODE_SIZE,
          height: QRCODE_SIZE,
          text: INDICES[1]
        });
        return $("#indice").show();
      } else {
        return alert("Désolé ! ce n'est pas ça !");
      }
    });
    return $("body").on("click", "#reponse2", function() {
      var r, v, x;
      x = parseInt($("#input2").val());
      if (power_of_2(x)) {
        v = prompt("Entrer votre réponse (un nombre)", "");
        v = parseInt(v);
        compile("5/2 3/25 1/5");
        r = exec(x);
        if (r === v) {
          $("#gmaps").attr("src", INDICES[1]);
          $("#qrcode").qrcode({
            width: QRCODE_SIZE,
            height: QRCODE_SIZE,
            text: INDICES[1]
          });
          return $("#indice").show();
        } else {
          return alert("Désolé ! ce n'est pas ça !");
        }
      } else {
        return alert("mmmh ! Le nombre en entrée ne ressemble pas celui d'un Frakhoumane le Blanc !");
      }
    });
  });

}).call(this);
